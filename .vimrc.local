""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Färger
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set antialias

let g:solarized_termtrans=1
let g:solarized_contrast="high"
let g:solarized_visibility="high"
let g:Powerline_theme='long'

if has("gui_running")
  highlight clear SignColumn " match SignColumn with bg for vim-gitgutter..
  let g:solarized_termcolors=256
  let g:Powerline_colorscheme='solarized256_dark'
  " set transparency=0

  "Hide toolbar and menus.
  set guioptions-=T
  set guioptions-=m

  " Scrollbar is always off.
  set guioptions-=rL

  " Enable gui tab labels
  set guioptions+=e

  " Disable bell.
  set vb t_vb=

  " Don't flick cursor.
  set guicursor=a:blinkon0

  let $pd = getcwd()
  if $pd == '/Users/anders/rails/urdb19'
    color solarized
  elseif $pd == '/home/rails/urdb19'
   " color white/espresso-soda
    color github256
    highlight NonText guibg=#060606
    highlight Folded  guibg=#0A0A0A guifg=#9090D0
  elseif $pd == '/home/rails/swedmak'
    color github256
    highlight NonText guibg=#060606
    highlight Folded  guibg=#0A0A0A guifg=#9090D0
    " color solarized
    " color brown/hybrid
  else
    color brown/vilight
  endif

  "color paper/mayansmoke
  "color white/summerfruit
  "color white/summerfruit256
  "vy
  "color paper/newspaper
  "color white/tomorrow
  "color white/fluidvision
  "color white/reliable
  "color paper/peachpuff

  "set background=dark
  "color brown/vilight   "js sass
  "color brown/twilight  "html
  "color railscasts      "ctrl
  "color grey/xoria256
  "color red/tetragrammaton
  "color black/synic
else
  set t_Co=256
  set lines=25
  set columns=90
  let g:solarized_termcolors=256
  let g:Powerline_colorscheme='solarized256_light'
  " set background=light
  color github256
  "color brown/hybrid
  "color black/grb256
  "color codeschool
end

if has("win32")
  set gfn=Bitstream_Sans_Mono_for_Powerline:h16:cANSI
  au GUIEnter * simalt ~x

elseif has("mac")
  set gfn=Meslo\ LG\ S\ DZ\ for\ Powerline:h16
  " set gfn=Ubuntu\ Mono\ derivative\ Powerline:h19
  " set gfn=Bitstream\ Vera\ Sans\ Mono\ for\ Powerline:h16
  " set gfn=Terminus\ For\ Powerline:h19
  " set gfn=Anonymous\ Pro\ for\ Powerline:h19
  " set gfn=DejaVu\ Sans\ Mono\ for\ Powerline:h16
  " set gfn=Inconsolata:h16
  " set gfn=Menlo:h14"
  " set gfn=M+\ 1m:h16
  " set gfn=Source\ Code\ Pro:h13
  " set gfn=Inconsolata-dz\ for\ Powerline\ 13
  " set gfn=Menlo\ for\ Powerline\ 13
  " set gfn=Monospace\ 13
  " set gfn=Envy\ Code\ R\ 13
elseif has("unix")
  set gfn=Meslo\ LG\ M\ DZ\ for\ Powerline\ 14
  "set gfn=Meslo\ LG\ M\ for\ Powerline\ 15
  "set gfn=Bitstream\ Vera\ Sans\ Mono\ for\ Powerline\ 15
  "set gfn=DejaVu\ Sans\ Mono\ for\ Powerline\ 15
  "set gfn=M+\ 1m\ 16
  "set gfn=Menlo\ for\ Powerline\ 13
  "set gfn=Inconsolata-dz\ for\ Powerline\ 13
  "set gfn=Monospace\ 13
  "set gfn=Envy\ Code\ R\ 13
  "set gfn=Andale\ Mono\ 16
endif

let Powerline_symbols = 'fancy'
set fillchars+=stl:\ ,stlnc:\
set encoding=utf-8

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Thoughtbot
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" öppna filer
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>e :edit %%
map <leader>v :view %%
map <leader>h :vnew %%
" map <leader>j :split %%

" vim-rspec mappings
nnoremap <Leader>t :call RunCurrentSpecFile()<CR>
nnoremap <Leader>s :call RunNearestSpec()<CR>
nnoremap <Leader>l :call RunLastSpec()<CR>

" Get off my lawn
nnoremap <Left>  :echoe "Use h"<CR>
nnoremap <Right> :echoe "Use l"<CR>
nnoremap <Up>    :echoe "Use k"<CR>
nnoremap <Down>  :echoe "Use j"<CR>

" ack sökning
map <leader>f :Ack<Space>

" Use Ag (https://github.com/ggreer/the_silver_searcher) instead of Grep
if executable("ag")
  set grepprg=ag\ --nogroup\ --nocolor
endif

" Sök inte igenom onödiga filer
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.gz,*.min.js,*.log
set wildignore+=/txt/*,public/*,/log/*,public/assets/*,app/assets/images/*
let g:ctrlp_custom_ignore = {
   \ 'dir':  '\v[\/]\.(git|hg|svn)$|public/*|txt/*|/assets/javascripts/tinymce/*|assets/javascripts/ui/*',
   \ 'file': '\v\.(exe|so|dll|.gz|.log|min.js)$',
   \ }

" Snabba test
let g:rspec_command = "Dispatch zeus rspec {spec}"


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MAPS TO JUMP TO SPECIFIC TARGETS AND FILES
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! ShowRoutes()
  " Requires 'scratch' plugin
  :topleft 100 :split __Routes__
  " Make sure Vim doesn't write __Routes__ as a file
  :set buftype=nofile
  " Delete everything
  :normal 1GdG
  " Put routes output in buffer
  :0r! rake -s routes
  " Size window to number of lines (1 plus rake output length)
  :exec ":normal " . line("$") . "_ "
  " Move cursor to bottom
  :normal 1GG
  " Delete empty trailing line
  :normal dd
endfunction

map <leader>gr :topleft :split config/routes.rb<cr>
map <leader>gR :call ShowRoutes()<cr>
map <leader>gg :topleft 100 :split Gemfile<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Rails
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <leader>gm :Rmodel
map <leader>gc :Rcontroller
map <leader>gv :Rview

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Command-T
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" map <leader>gv :CommandTFlush<cr>\|:CommandT app/views<cr>
" map <leader>gc :CommandTFlush<cr>\|:CommandT app/controllers<cr>
" map <leader>gm :CommandTFlush<cr>\|:CommandT app/models<cr>
" map <leader>gh :CommandTFlush<cr>\|:CommandT app/helpers<cr>
" map <leader>gl :CommandTFlush<cr>\|:CommandT lib<cr>
" map <leader>gp :CommandTFlush<cr>\|:CommandT public<cr>
" map <leader>ga :CommandTFlush<cr>\|:CommandT app/assets<cr>
" map <leader>gj :CommandTFlush<cr>\|:CommandT app/assets/javascripts<cr>
" map <leader>gs :CommandTFlush<cr>\|:CommandT app/assets/stylesheets<cr>
" map <leader>gf :CommandTFlush<cr>\|:CommandT features<cr>
" map <leader>gt :CommandTFlush<cr>\|:CommandTTag<cr>
" map <leader>f :CommandTFlush<cr>\|:CommandT<cr>
" map <leader>F :CommandTFlush<cr>\|:CommandT %%<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vet ej
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"set rtp+=~/.vam/vim-addon-manager
"call vam#ActivateAddons(["FuzzyFinder"])
" set foldmethod=syntax

